---
title: "Plotting survival"
author: 'eleanorjackson'
date: '`r format(Sys.time(), "%d %B, %Y")`' 
format: gfm+emoji
editor: source
---

```{r setup}
#| include: false

file_name <- knitr::current_input()

knitr::opts_chunk$set(
  fig.path =
    paste0("figures/", sub("\\.rmarkdown$", "", basename(file_name)), "/", sep = "")
)

ggplot2::theme_set(ggplot2::theme_classic(base_size = 10))
```

Andy: 
_We discussed growth the other day but we need to do the mortality analysis alongside as one informs the other._

_I said I did not think a repeated measures binary GLMM was possible but I did a web search and in principle it should be. We need to look back at the issues Ryan met._

_In both cases brms may help (and can be run in basic form with lmer code so no more work)_

_Again, simple graphs may be a good way to start for survival over time for the different species in the two forest types_

_We are interested in:_

- _Sp diffs_
- _Forest diffs_
- _Any interactions (species preferences for one forest type)_

I'm going to try plotting some survival curves using Ryan's clean data.

```{r packages}
#| output: false

library("tidyverse")
library("here")
library("patchwork")
library("janitor")
library("lubridate")
library("brms")
```

```{r}
ryan_data <-
  read_csv(
  here::here("docs", 
             "r-veryard", 
             "data", 
             "combined_sbe_danum_data.csv")
  ) %>% 
  clean_names() 

glimpse(ryan_data)
```

Creating a `days` variable - days since first survey, 
which will be different for the primary and secondary forest types.

```{r}
min_date_primary <-
  ryan_data %>% 
  filter(type == "Primary") %>% 
  summarise(min_date = min(survey_date)) %>% 
  pluck(1,1)

min_date_secondary <-
  ryan_data %>% 
  filter(type == "Secondary") %>% 
  summarise(min_date = min(survey_date)) %>% 
  pluck(1,1)

ryan_data <-
  ryan_data %>% 
  mutate(days =
    case_when(type == "Primary" ~ difftime(survey_date, min_date_primary),
              type == "Secondary" ~ difftime(survey_date, min_date_secondary))
    ) %>% 
  mutate(days = time_length(days, unit = "days"))

```


```{r}
sp_survival_data <-
  ryan_data %>% 
  group_by(type, species, census, days) %>% 
  summarise(prop_alive = mean(survival, na.omit = TRUE),
            count = n())
```

## Plotting by species

```{r}
#| fig.height: 5 
#| fig.width: 10   
#| layout-nrow: 2

sp_survival_data %>% 
  filter(type == "Primary") %>% 
  ggplot(aes(x = days, y = prop_alive, group = species,
             colour = species, fill = species)) +
  geom_point(alpha = 0.6, shape = 16) +
  geom_smooth(se = FALSE) +
  scale_colour_viridis_d() +
  scale_fill_viridis_d() +
  
  sp_survival_data %>% 
  filter(type == "Primary") %>% 
  ggplot(aes(x = days, y = prop_alive)) +
  geom_point(alpha = 0.6, shape = 16) +
  geom_smooth() +
  
  plot_annotation(title = "Primary forest")

sp_survival_data %>% 
  filter(type == "Secondary") %>% 
  ggplot(aes(x = days, y = prop_alive, group = species,
             colour = species, fill = species)) +
  geom_point(alpha = 0.6, shape = 16) +
  geom_smooth(se = FALSE) +
  scale_colour_viridis_d() +
  
  sp_survival_data %>% 
  filter(type == "Secondary") %>% 
  ggplot(aes(x = days, y = prop_alive)) +
  geom_point(alpha = 0.6, shape = 16) +
  geom_smooth() +
  
  plot_annotation(title = "Secondary forest")
```

Looks strange.. is this because I'm plotting by days?
Try plotting by census.

```{r}
prop_type_census <-
  ryan_data %>% 
  group_by(type, census) %>% 
  summarise(prop = mean(survival, na.omit = TRUE),
            count = n(),
            days = mean(days))

prop_type_census %>% 
  ggplot(aes(x = days, y = prop)) +
  geom_jitter(shape = 16, width = 50) +
  geom_smooth() +
  facet_wrap(~type)
```

This looks more like I expected.

Perhaps there sampling is uneven across days - 
`geom_smooth` isn't taking sample size into account.

Try plotting with size of points equal to number of observations.

```{r}
prop_type_days <-
  ryan_data %>% 
  group_by(type, census, days) %>% 
  summarise(prop = mean(survival, na.omit = TRUE),
            count = n())

prop_type_days %>% 
  arrange(count) %>% 
  glimpse()

prop_type_days %>% 
  ggplot(aes(x = days, y = prop)) +
  geom_jitter(aes(size = count),
              alpha = 0.6, shape = 16, width = 50) +
  geom_smooth() +
  facet_wrap(~type)
```

Ok, so for the secondary forest there are many days where few measurements were taken.

The number of observations per plot should remain constant across each census
if dead individuals are recorded as NA.

```{r}
ryan_data %>% 
  group_by(plot, census, type) %>% 
  summarise(count = n(), days = mean(days)) %>% 
  ggplot(aes(x = days, y = count, colour = plot)) +
  geom_point() +
  geom_path() +
  facet_wrap(~ type, scales = "free", ncol = 1) 
```

At census seven in the secondary forest many plots gain or loose some observations,
seedlings added or lost?

Most of the primary forest plots remain stable.

Try plotting with a binomial `geom_smooth`.

```{r}
p <- ggplot() +
  geom_smooth(data = ryan_data, aes(x = days, y = survival), 
              method = "glm", method.args = list(family = "binomial")) +
  facet_wrap(~type)

p +
  ggdist::geom_dots(data = ryan_data, 
                    aes(y = as.numeric(survival), x = days, 
                        side = ifelse(survival == 0, "bottom", "top")), 
                    color = "grey20", binwidth = 150, overflow = "compress", 
                    shape = 16, alpha = 0.6) 
```

and per species plots again

```{r}
prop_type_sp <-
  ryan_data %>% 
  group_by(type, census, species) %>% 
  summarise(prop = mean(survival, na.omit = TRUE),
            count = n(),
            days = mean(days))

prop_type_sp %>% 
  ggplot(aes(x = days, y = prop, colour = species)) +
  geom_jitter(shape = 16, width = 50) +
  geom_smooth(se = FALSE) +
  facet_wrap(~type) +
  scale_colour_viridis_d() 
```

```{r}
ryan_data %>%  
  ggplot() +
  geom_smooth(aes(as.numeric(survival), x = days, colour = species), se = FALSE,
              method = "glm", method.args = list(family = "binomial")) +
  facet_wrap(~type) +
  scale_colour_viridis_d() 
```

Try some plots at the individual tree level.

```{r}
ryan_data %>% 
  group_by(tree_id) %>% 
  nest() %>% 
  ungroup() %>% 
  sample_n(20) %>% 
  unnest(cols = data) %>% 
  ggplot(aes(x = days, y = survival, colour = type)) +
  geom_point(alpha = 0.6, shape = 16) +
  geom_smooth() +
  facet_wrap(~tree_id) 
```

There seem to be many seedlings in the secondary forest that are dead at day zero.

If we had the planting date we could add a record at that date where all seedlings were alive.

Could just adjust by removing seedlings dead at day zero, 
but would it still be comparable to the primary forest seedlings?
