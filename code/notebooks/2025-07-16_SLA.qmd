---
title: "Specific leaf area"
author: 'eleanorjackson'
date: '`r format(Sys.time(), "%d %B, %Y")`' 
format: 
  gfm:
    toc: true
editor: source
execute:
  warning: false
---

```{r setup}
#| include: false

file_name <- knitr::current_input()

knitr::opts_chunk$set(
  fig.path =
    paste0("figures/", sub("\\.rmarkdown$", "", basename(file_name)), 
           "/", sep = "")
)

set.seed(123)
ggplot2::theme_set(ggplot2::theme_bw(base_size = 10))
```

```{r}
library("tidyverse")
library("tidybayes")
```

David B:

>For seedling mortality between logged and unlogged forests we found that traits related to relative investment above/below-ground and LMA (=inverse of specific leaf area) were important [Bartholomew  et al. (2024)](https://doi.org/10.1111/gcb.17209). Most plant trait data end up on TRY, so you could look there for LMA/SLA for these species, and we should also ask Mikey O’Brien. Data collected locally would be best, so if the species are in Sabine Both’s dataset we can use it; we’ll just need to offer her authorship when the time comes.

Specific leaf area (SLA) is the ratio of leaf area to leaf dry mass (leaf area/leaf mass).

LA_cm2_mean / dry_weight_mg_mean

Also [Both et al. (2018)](https://doi.org/10.1111/nph.15444)

Trait measurements were taken in old-growth and selectively logged forest.
Old growth sites were Maliau Basin Conservation Area (two plots) the Danum Valley Conservation Area (two plots) and Kalabakan Forest Reserve (four plots).
The logged sites are part of the Stability of Altered Forest Ecosystem (SAFE) project.

It might be a good idea to only use the DV sites but there is no metadata,
so I have no idea which location code/site ID refers to Danum.

```{r}
sla_both <- 
  readxl::read_excel(
  here::here(
    "data",
    "raw",
    "Both_tree_functional_traits_subset RV.xlsx"
    ),
  sheet = 4,
  skip = 6,
  na = c("", " ", "NA")
) %>% 
  mutate(Species = 
           str_replace(species, "\\.", "_")) %>% 
  select(tree_id, Species, forest_type, location, 
         LA_cm2_mean, dry_weight_mg_mean)
```

```{r}
mod_gro <-
  readRDS(here::here("output", "models", 
                     "growth_model_base_p3.rds"))


mod_surv <-
  readRDS(here::here("output", "models", "survival",
                     "survival_model_impute.rds"))
```

## Get growth 

```{r}
pc_data_A <-
  mod_gro %>%
  spread_draws(
    b_A_forest_typeprimary,
    b_A_forest_typelogged,
    `r_genus_species__A.*`, regex = TRUE) %>%
  rowwise() %>%
  mutate(across(contains(",forest_typeprimary]"),
                ~ .x + b_A_forest_typeprimary)) %>%
  mutate(across(contains(",forest_typelogged]"),
                ~ .x + b_A_forest_typelogged)) %>%
  ungroup() %>%
  pivot_longer(cols = contains("r_genus_species__A")) %>%

  mutate(forest_type = case_when(
    grepl("logged", name) ~ "logged",
    grepl("primary", name) ~ "Primary")) %>%
  mutate(Species = str_split_i(string = name, pattern ="\\[", i = 2)) %>%
  mutate(Species = str_split_i(string = Species, pattern =",", i = 1)) %>%
  mutate(Parameter = "A") %>% 
  select(- b_A_forest_typeprimary, -b_A_forest_typelogged, -name)

pc_data_k <-
  mod_gro %>%
  spread_draws(
    b_k_forest_typeprimary,
    b_k_forest_typelogged,
    `r_genus_species__k.*`, regex = TRUE) %>%
  rowwise() %>%
  mutate(across(contains(",forest_typeprimary]"),
                ~ .x + b_k_forest_typeprimary)) %>%
  mutate(across(contains(",forest_typelogged]"),
                ~ .x + b_k_forest_typelogged)) %>%
  ungroup() %>%
  pivot_longer(cols = contains("r_genus_species__k")) %>%

  mutate(forest_type = case_when(
    grepl("logged", name) ~ "logged",
    grepl("primary", name) ~ "Primary")) %>%
  mutate(Species = str_split_i(string = name, pattern ="\\[", i = 2)) %>%
  mutate(Species = str_split_i(string = Species, pattern =",", i = 1)) %>%
  mutate(Parameter = "k") %>% 
  select(- b_k_forest_typeprimary, -b_k_forest_typelogged, -name)

pc_data_delay <-
  mod_gro %>%
  spread_draws(
    b_delay_forest_typeprimary,
    b_delay_forest_typelogged,
    `r_genus_species__delay.*`, regex = TRUE) %>%
  rowwise() %>%
  mutate(across(contains(",forest_typeprimary]"),
                ~ .x + b_delay_forest_typeprimary)) %>%
  mutate(across(contains(",forest_typelogged]"),
                ~ .x + b_delay_forest_typelogged)) %>%
  ungroup() %>%
  pivot_longer(cols = contains("r_genus_species__delay")) %>%

  mutate(forest_type = case_when(
    grepl("logged", name) ~ "logged",
    grepl("primary", name) ~ "Primary")) %>%
  mutate(Species = str_split_i(string = name, pattern ="\\[", i = 2)) %>%
  mutate(Species = str_split_i(string = Species, pattern =",", i = 1)) %>%
  mutate(Parameter = "delay") %>% 
  select(- b_delay_forest_typeprimary, -b_delay_forest_typelogged, -name)

growth_params <-
  bind_rows(pc_data_A,
            pc_data_delay,
            pc_data_k) %>% 
  mutate(value = case_when(
    Parameter == "k" ~ (value / exp(1))*100,
    .default = value
  )) %>% 
  pivot_wider(names_from = forest_type, values_from = value) %>% 
  rowwise() %>% 
  mutate(
    diff = logged - Primary
  )
```

## Get survival

```{r}
surv_params <-
  mod_surv %>%
  spread_draws(r_genus_species__timetolastalive[genus_species,forest_type],
               b_timetolastalive_forest_typelogged,
               b_timetolastalive_forest_typeprimary, regex=T) %>%
  mutate(value = case_when(forest_type == "forest_typeprimary" ~
                             r_genus_species__timetolastalive +
                             b_timetolastalive_forest_typeprimary,
                           forest_type == "forest_typelogged" ~
                             r_genus_species__timetolastalive +
                             b_timetolastalive_forest_typelogged)) %>%
  mutate(forest_type = case_when(
    forest_type == "forest_typelogged" ~ "logged",
    forest_type == "forest_typeprimary" ~ "Primary")) %>% 
  pivot_wider(names_from = forest_type, 
              id_cols = c(genus_species, .chain, .iteration, .draw),
              values_from = value) %>% 
  mutate(diff = logged - Primary,
         Parameter = "survival") %>% 
  rename(Species = genus_species)
```

Combine growth and survival estimates

```{r}
all_params <- 
  bind_rows(growth_params, surv_params) 
```

## SLA

```{r}
sla_both %>% 
  filter(Species %in% all_params$Species) %>% 
  distinct(Species) %>% 
  arrange(Species)
```

[Both et al. (2018)](https://doi.org/10.1111/nph.15444) has 11 of the 15 species. 
Missing Dipterocarpus_conformis, Shorea_argentifolia,
Shorea_beccariana, Shorea_faguetiana.

In sla_both, we have:

- LA_cm2_mean (cm2) Mean leaf area (LA) calculated from fresh leaves collected from branches, scanned immediately
- dry_weight_mg_mean (mg) Mean leaf oven-dried weight


```{r}
med_both <- 
  sla_both %>% 
  filter(Species %in% all_params$Species) %>% 
  mutate(sla = LA_cm2_mean / dry_weight_mg_mean) %>% 
  group_by(Species) %>% 
  summarise(sla = median(sla, na.rm = TRUE)) 
```


Preference for Both because the measurements were taken in Danum.

```{r}
param_traits <- 
  all_params %>% 
  left_join(med_both)

```

## Plots

```{r}
param_traits %>%
  ggplot(aes(y = diff, 
             x = sla,
             group = Species)) +
  stat_interval(alpha = 0.5, show_point = TRUE, 
                point_size = 1, point_fill = "white",
               point_colour = "black", size = 1.75,
               shape = 21) +
  facet_wrap(~Parameter, scales = "free") +
  geom_hline(yintercept = 0, colour = "red", linetype = 2) +
  labs(y = "Additional effect of logging
       \n(logged forest estimate - old-growth forest estimate)",
       x = "Specific leaf area")
```

```{r}
param_traits %>%
  group_by(Parameter, Species, sla) %>% 
  point_interval(diff) %>% 
  ggplot(aes(y = diff, 
             x = sla)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_wrap(~Parameter, scales = "free") +
  labs(y = "Additional effect of logging
       \n(logged forest estimate - old-growth forest estimate)",
       x = "Specific leaf area")
```

```{r}
param_traits %>%
  ggplot(aes(x = diff, 
             y = reorder(Species, sla),
             group = Species)) +
  stat_interval(alpha = 0.5, show_point = TRUE, 
                point_size = 1, point_fill = "white",
               point_colour = "black", size = 1.75,
               shape = 21) +
  facet_grid(~Parameter, scales = "free_x") +
  geom_vline(xintercept = 0, colour = "red", linetype = 2) +
  labs(x = "Additional effect of logging
       \n(logged forest estimate - old-growth forest estimate)",
       y = "Decreasing SLA") +
  theme(legend.position = "top")
```
