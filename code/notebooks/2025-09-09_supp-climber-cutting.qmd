---
title: "Supplementary Information for the climber cutting plots"
author: 'eleanorjackson'
date: '`r format(Sys.time(), "%d %B, %Y")`' 
format: 
  gfm:
    toc: true
editor: source
execute:
  warning: false
---

```{r setup}
#| include: false

file_name <- knitr::current_input()

knitr::opts_chunk$set(
  fig.path =
    paste0("figures/", sub("\\.rmarkdown$", "", basename(file_name)), 
           "/", sep = "")
)

set.seed(123)
ggplot2::theme_set(ggplot2::theme_bw(base_size = 13))
```

```{r}
library("tidyverse")
library("patchwork")
library("tidybayes")
library("brms")
library("modelr")
library("broom.mixed")
library("ggtext")
```

```{r}
model_cc <- 
  readRDS(here::here("output", 
                   "models", 
                   "grow-extra",
                   "growth_model_base_p3_cc.rds"))

model_main <- readRDS(here::here("output",
                                 "models",
                                 "growth_model_base_p3_allo.rds"))
```

```{r}
model_cc$formula
```

```{r}
model_main$formula
```

```{r}
my_coef_tab <- 
  tibble(fit = list(model_main, model_cc),
         model = c("Original model", 
                   "with fixed effect\nof climber cutting")) %>%
  mutate(tidy = purrr::map(
    fit,
    broom.mixed::tidy,
    effect = "fixed")) %>% 
  select(-fit) %>% 
  unnest(tidy) %>% 
  filter(!grepl("prior", term)) %>% 
  filter(!grepl("cut", term)) %>% 
  rowwise() %>% 
  mutate(parameter = pluck(strsplit(term, "_"),1, 1)) %>% 
  mutate(forest_type = pluck(strsplit(term, "_"), 1, 3)) %>%
  mutate(forest_type = str_remove(forest_type, "type")) %>%
  mutate(forest_type =
           case_when(
             forest_type == "primary" ~ "Old-growth forest",
             forest_type == "logged" ~ "Logged forest",
             .default = forest_type
             )) %>% 
  mutate(estimate = case_when(
    parameter == "k" ~ (estimate / exp(1))*100,
    .default = estimate
  ),
  conf.low  = case_when(
    parameter == "k" ~ (conf.low  / exp(1))*100,
    .default = conf.low 
  ),
  conf.high = case_when(
    parameter == "k" ~ (conf.high / exp(1))*100,
    .default = conf.high
  )) %>%
  mutate(name = case_when(
    parameter == "A" ~ "<i>A</i>, Asymptotic basal<br>diameter (mm)",
    parameter == "k" ~ "<i>k<sub>G</sub> / e</i>, Maximum relative<br>growth rate (% year<sup>-1</sup>)",
    parameter == "delay" ~ "<i>T<sub>i</sub></i>, Time to reach max<br>growth rate (years)"
  ))
```

```{r}
my_coef_tab %>% 
  ggplot(aes(x = forest_type, 
             y = estimate, 
             ymin = conf.low, ymax = conf.high)) +
  geom_pointrange(shape = 21, fill = "white") +
  labs(x = NULL,
       y = NULL) +
  coord_flip() +
  facet_grid(model~name, 
             scales = "free") +
  theme(strip.text = element_markdown())
```

```{r}
model_survival <-
  readRDS(here::here("output", "models", "survival",
                     "survival_model_allo_nocenter.rds"))
```

```{r}
model_survival$formula
```

```{r}
model_survival_cc <-
  readRDS(here::here("code",
                        "notebooks",
                        "models",
                        "2025-09-09_extra-survival-models",
                        "survival_climber_cut.rds"))
```

```{r}
model_survival_cc$formula
```

```{r}
my_coef_tab_survival <- 
  tibble(fit = list(model_survival, model_survival_cc),
         model = c("Original model", 
                   "with fixed effect\nof climber cutting")) %>%
  mutate(tidy = purrr::map(
    fit,
    broom.mixed::tidy,
    effect = "fixed")) %>% 
  select(-fit) %>% 
  unnest(tidy) %>% 
  filter(!grepl("prior", term)) %>% 
  rowwise() %>% 
  mutate(forest_type = pluck(strsplit(term, "_"), 1, 2)) %>%
  mutate(forest_type = str_remove(forest_type, "type")) %>% 
  mutate(forest_type =
           case_when(
             forest_type == "primary" ~ "Old-growth forest",
             forest_type == "logged" ~ "Logged forest",
             forest_type == "mean" ~ "Basal diameter",
             forest_type == "cut1" ~ "Climber cutting",
             .default = forest_type
             )) 
```

```{r}
my_coef_tab_survival %>% 
  ggplot(aes(x = forest_type, 
             y = estimate, 
             ymin = conf.low, ymax = conf.high)) +
  geom_pointrange(shape = 21, fill = "white") +
  labs(x = NULL,
       y = NULL) +
  coord_flip() +
  facet_grid(rows = vars(model), 
             scales = "fixed") +
  theme(strip.text = element_markdown())
```
